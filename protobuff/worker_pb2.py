# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: worker.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import entity_pb2 as entity__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='worker.proto',
  package='protobuff',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0cworker.proto\x12\tprotobuff\x1a\x0c\x65ntity.proto\"/\n\x08WorkerPb\x12#\n\x06\x64\x62Info\x18\x01 \x01(\x0b\x32\x13.protobuff.EntityPbb\x06proto3')
  ,
  dependencies=[entity__pb2.DESCRIPTOR,])




_WORKERPB = _descriptor.Descriptor(
  name='WorkerPb',
  full_name='protobuff.WorkerPb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dbInfo', full_name='protobuff.WorkerPb.dbInfo', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=41,
  serialized_end=88,
)

_WORKERPB.fields_by_name['dbInfo'].message_type = entity__pb2._ENTITYPB
DESCRIPTOR.message_types_by_name['WorkerPb'] = _WORKERPB
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

WorkerPb = _reflection.GeneratedProtocolMessageType('WorkerPb', (_message.Message,), {
  'DESCRIPTOR' : _WORKERPB,
  '__module__' : 'worker_pb2'
  # @@protoc_insertion_point(class_scope:protobuff.WorkerPb)
  })
_sym_db.RegisterMessage(WorkerPb)


# @@protoc_insertion_point(module_scope)
